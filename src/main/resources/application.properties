spring.application.name=customer
logging.level.org.springframework.security=DEBUG
logging.level.root=DEBUG
logging.level.com.reservation=DEBUG
server.port=8020
management.server.port=8125
#Spring Boot endpoints
management.endpoint.env.enabled=true
management.endpoints.web.exposure.include=health,env,beans,metrics
#Spring Boot endpoints
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.restart.enabled=true
management.endpoint.info.enabled=true
# disable getting logs via endpoint!
# OTT-1720 - Security 5.2 HOST-HIGH-002: Subscriber messages exposed through unauthenticated HTTP interface on internal network
management.endpoint.logfile.enabled=false
# Disable the Spring Config health check, as if it is down, ECS would bounce the microservice,
# which would fail to start because the Spring Config server was not available.  Essentially,
# a DOS on our self.
health.config.enabled=false
# web templates
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false
server.use-forward-headers=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.url=jdbc:postgresql://localhost:5432/seatMe
spring.datasource.username=seatMe
spring.datasource.password=TBD
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.EJB3NamingStrategy